{
    "Basic Template": {
        "prefix": "!BASIC_TEMPLATE",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;",
            "",
            "#define ll long long",
            "",
            "",
            "int main(void)",
            "{",
            "",
            "}"
        ],
        "description": "Basic Tempate"
    },
    "Competitive Programming Template": {
        "prefix": "!CP",
        "body": [
            "#include <bits/stdc++.h>",
            "#include <ext/pb_ds/assoc_container.hpp> ",
            "#include <ext/pb_ds/tree_policy.hpp> ",
            "",
            "// Peformance",
            "// #pragma GCC optimize(\"Ofast\")",
            "// #pragma GCC optimize(\"unroll-loops\")",
            "// #pragma GCC target(\"popcnt,avx2,tune=native\")",
            "",
            "//  Namespaces",
            "using namespace __gnu_pbds; ",
            "using namespace std;",
            "",
            "",
            "// Data types",
            "#define ll long long",
            "#define ld long double",
            "#define ull unsigned long long",
            "#define pii pair<int,int>",
            "#define ve vector",
            "#define vi ve<int>",
            "#define vl ve<ll>",
            "",
            "// Quick Macros",
            "#define debug dbg",
            "#define dbg(x...) cerr << \"[\" << #x << \"] = [\"; cerr << endl,x; cerr << \"]\\n\"",
            "#define gcd(a,b) __gcd<long long>(a,b)",
            "#define lcm(a,b) (a * (b / gcd(a,b)))",
            "#define even(x) !((x) & 1)",
            "#define odd(x) ((x) & 1)",
            "#define max(...) max({__VA_ARGS__})",
            "#define min(...) min({__VA_ARGS__})",
            "#define chmax(a, ...) (a = max(a, __VA_ARGS__))",
            "#define chmin(a, ...) (a = min(a, __VA_ARGS__))",
            "#define fi first",
            "#define se second",
            "#define pb push_back",
            "#define pob pop_back",
            "#define endl '\\n'",
            "#define all(x) x.begin(), x.end()",
            "#define mset(x,y) memset(x,y,sizeof(x))",
            "#define getl(s) getline(cin, (s))",
            "#define tc int _tc; cin >> _tc; for(int _TC = 1; _TC <= _tc;_TC++)",
            "#define inmap(value, n) (value >= 0 && value < n)",
            "#define pct __builtin_popcount",
            "#define pctl __builtin_popcountll",
            "//      ^-> pct to count number of 1's in an int",
            "constexpr int bits(int x) {  return x == 0 ? 0 : 31 - __builtin_clz(x);} // -> find largest bit place",
            "template<typename T> T modsub(T a, T b, T mod) {a -= b % mod; if(a < 0) a += mod; return a % mod;}",
            "",
            "// Shortcuts",
            "int next() {int temp; cin >> temp; return temp;};",
            "ll nextl() {ll temp; cin >> temp; return temp;};",
            "",
            "// PBDS",
            "template <class T> using ordered_set = tree<T,null_type,less<T>,rb_tree_tag,tree_order_statistics_node_update>; ",
            "template <class T> using ordered_mset = tree<T,null_type,less_equal<T>,rb_tree_tag,tree_order_statistics_node_update>; ",
            "// order_of_key (k) : Number of items strictly smaller than k .",
            "// find_by_order(k) : K-th element in a set (counting from zero).",
            "",
            "// Priority Queue",
            "#define pq priority_queue",
            "template <class T> using pqg = priority_queue<T, vector<T>, greater<T>>;",
            "",
            "// inputs and Outputs",
            "#define vin(a, n) for(int i =0; i<(n); i++) cin >> a[i]",
            "#define vip(a, n) for(int i =0; i<(n); i++) {int temp; cin >> temp; a.pb(temp);}",
            "#define yes cout << \"YES\" << endl",
            "#define no cout << \"NO\" << endl",
            "template<class A, class B> ostream& operator<<(ostream& os, const pair<A,B> &p) { os << p.first << ' ' << p.second; return os;}",
            "template<class T> ostream& operator<<(ostream& os, const vector<T> &v) {for(auto i: v) { os << i << ' ';}; return os;}",
            "template<class T> ostream& operator<<(ostream& os, const set<T> &v) {for(auto i: v) { os << i << ' ';}; return os;}",
            "template<class T> ostream& operator<<(ostream& os, const multiset<T> &v) {for(auto i: v) { os << i << ' ';}; return os;}",
            "template<class A, class B> ostream& operator<<(ostream& os, const map<A,B> &p) {for(auto i:p) {os << i << endl;} return os;}",
            "template<class T, ull int size> ostream& operator<<(ostream& os, const array<T,size> &arr) {for(auto i: arr) { os << i << ' ';}; return os;}",
            "template<class T> ostream& operator,(ostream&os, const T &v) {os  << \"\\t{\"<< v << \"},\" << '\\n'; return os;} // for debugging",
            "",
            "// Debugging Off",
            "#ifdef ONLINE_JUDGE",
            "#define cerr if(0) cerr",
            "#undef dbg",
            "#define dbg",
            "#endif",
            "",
            "// Constants",
            "const int iMAX = 2147483647; // 2 * 10^9",
            "const int iBIG = 1e9; // 10 ^9",
            "const long long int lMAX = 9223372036854775807; // 9 * 10^18",
            "const long long int lBIG = 1e18; // 10^18",
            "const int dx[8] = {1,0,-1,0,1,1,-1,-1}, dy[8] = {0,1,0,-1, 1,-1,1,-1}; // -> graph movements",
            "",
            "const long long int MOD  = 1000000007;",
            "const long long int MAXA = 1e5;",
            "const long long int MAXB = 1e8;",
            "",
            "// #define int long long",
            "",
            "void solve() {",
            "    ${0}",
            "}",
            "",
            "int32_t main() {",
            "    ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);",
            "",
            "    ${1}solve();",
            "",
            "}"
        ],
        "description": "Competitive Programming Template"
    },
    "String Hashing (polinomial)": {
        "prefix": "!String_Hashing_Poli",
        "body": [
            "set<pair<int,int>> str_hash;",
            "",
            "pair<int, int> create_hash(string s) {",
            "    const unsigned long long int p1  = 31, // use 53 for upper case",
            "                        m1 = 1e9 + 9,",
            "                        p2 = 37, // use 61 for uppercase",
            "                        m2 = 1e9 + 21;",
            "",
            "    unsigned long long int hash_value1 = 0,",
            "                  hash_value2 = 0,",
            "                  p_pow1 = 1,",
            "                  p_pow2 = 1;",
            "",
            "    for(char c : s) {",
            "        hash_value1 = (hash_value1 + (c - 'a' + 1) * p_pow1) % m1; // if has uppercase -'A'",
            "        hash_value2 = (hash_value2 + (c - 'a' + 1) * p_pow2) % m2;",
            "        p_pow1 = (p_pow1 * p1) % m1;",
            "        p_pow2 = (p_pow2 * p2) % m2;",
            "    }",
            "",
            "    return { hash_value1, hash_value2 };",
            "}"
        ],
        "description": "String Hashing (polinomial) O(n)"
    },
    "Fast Exponentials": {
        "prefix": "!Fast_Expo",
        "body": [
            "long long fast_expo_mod(long long a, long long b, long long mod) {",
            "    long long out = 1;",
            "    while(b > 0) {",
            "        if(b & 1) {",
            "            out = out * a % mod;",
            "        }",
            "        a = a * a % mod;",
            "        b >>= 1;",
            "    }",
            "    return out;",
            "}",
            "",
            "long long fast_expo(long long a, long long b) {",
            "    long long out = 1;",
            "    while(b > 0) {",
            "        if(b & 1) {",
            "            out *= a;",
            "        }",
            "        a *= a;",
            "        b >>= 1;",
            "    }",
            "    return out;",
            "}"
        ],
        "description":"Fast powers O(log N)"
    }
}
